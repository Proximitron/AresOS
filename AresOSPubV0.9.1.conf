name: AresOSPubV0.9.1
slots:
  warpdrive:
    class: WarpDriveUnit
  core:
    class: CoreUnit
handlers:
  unit:
    onStart:
      lua: |
        packagePrefix = "autoconf.custom.AresOS."
        package.preload[packagePrefix.."artificialhorizon"] = function()
           local self={}local a=""local b=""self.viewTags={"hud"}function self:onMouseDown(c,d,e)system.print("track: "..c.."_"..d)end;function self:onMouseUp(c,d,e)system.print("track: "..c.."_"..d)end;function self:requireRerender(f)return true end;function self:setScreen(f)local g=false;local h=a;local i=construct.getVelocity()local j=vec3(i):len()local k=vec3(core.getWorldVertical())local l=vec3(construct.getWorldOrientationForward())local m=vec3(construct.getWorldOrientationRight())local n=0;local o=0;local p=0;local q=0;if unit.getClosestPlanetInfluence()>0 or altitude>0 and altitude<100000 then mode=0 else mode=1 end;if j>5 then p=getRelativePitch(i)q=getRelativeYaw(i)invertPitchYaw=false;if invertPitchYaw then p=p+180;q=q+180 end end;if mode==1 then o=p;n=q else o=180-getRoll(k,m,l)if o>180 then o=-(360-o)end;o=o*-1;n=getRoll(k,l,m)*-1 end;if o>90 then o=o-180 elseif o<-90 then o=o+180 end;if n>90 or n<-90 then g=true;h=b end;if n>90 then n=n-180 elseif n<-90 then n=n+180 end;local r=[[
                                <svg id="artihorizon" height="70%" width="100%" viewBox="-640 -360 1280 720" style="display: block;margin: 0 auto;position: absolute;top: 22%; overflow: hidden">
                                    <g transform="rotate(0 0,0) translate(0,0)">
                                      <g transform="rotate(]]..n..[[ 0,0) translate(0,]]..math.floor(o*8)..[[)">
                                        <rect width="200vw" height="100vh" x="-100vw" y="0" fill="transparent" />
                                        <line x1="-45" y1="0" x2="-190" y2="0" class="sstroke" style="opacity:0.5;stroke-width:2;stroke-dasharray: 10, 10, 2, 10"/>
                                        <line x1="45" y1="0" x2="190" y2="0" class="sstroke" style="opacity:0.5;stroke-width:2;stroke-dasharray: 10, 10, 2, 10" />
                                        <g font-size=8>
                                ]]if h==""then for s=-72,72 do if s~=0 and s%12==0 then local t=s*10;local u=utils.round(s*-1.250)local v="txtPoly"local w=5;local x=5;if g then u=u*-1;w=-5;x=-5;if s<=0 then v="txtPolyN"w=5;x=-1 end else if s>0 then v="txtPolyN"w=-5;x=1 end end;h=h..[[
                                                <text x="59" y="]]..t+x..[[" text-anchor="start" class="atext">]]..u..[[</text>
                                                <text x="-59" y="]]..t+x..[[" text-anchor="end" class="atext">]]..u..[[</text>
                                                
                                                <polyline points="35 ]]..t..[[ 56 ]]..t..[[ 56 ]]..t+w..[[" class="]]..v..[["/>		
                                                <polyline points="-35 ]]..t..[[ -56 ]]..t..[[ -56 ]]..t+w..[[" class="]]..v..[["/>
                                            ]]end end;if g then b=h else a=h end end;r=r..h;r=r..[[
                                        </g>
                                      </g>
                                      <polyline points="-30,0 -7,0 0,7 7,0 30,0" fill="none" class="sstroke" stroke-width="2px" />
                                  </g>
                                ]]if j>20 then r=r..[[
                                        <svg x="]]..utils.round(q*-8-14)..[[" y="]]..utils.round(p*8-13)..[[" viewBox="0 0 64 64" width="30px" height="30px">
                                          <line class="majorLine" x1="30" y1="30" x2="30" y2="5"/>
                                          <circle class="majorLine" cx="30" cy="30" r="25"/>
                                        </svg>
                                    ]]end;r=r..[[
                                </svg>
                                ]]return r end;function self:register(y)_ENV=y end;return self
        
        end
        package.preload[packagePrefix.."hud"] = function()
           local self={}local a={}local b=0;local c=nil;local d=nil;function renderHudGeneralCss()if modeColors[b]==nil then modeColors[b]=290 end;local e=math.max(0,math.min(modeColors[b],360))local f=e+270.0;if f>360 then f=f-360 end;local g=e+180.0;if g>360 then g=g-360 end;local h=5;if e<45 or e>315 then h=g end;return[[
                                    .lfill { fill:hsl(]]..e..[[, 93.6%, 56.9%)}
                                    .sfill { fill:hsl(]]..e..[[, 100%, 50%) }
                                    polygon { fill:hsl(]]..e..[[, 93.6%, 56.9%);opacity:0.8 }
                                    .majorLine, .minorLine {stroke:hsl(]]..e..[[, 100%, 50%);opacity:0.8;stroke-width:3;fill-opacity:0;}
                                    .minorLine {opacity:0.4}
                                    .text {fill:hsl(]]..e..[[, 100%, 50%);font-weight:bold}
                                    .warn { fill:hsl(]]..h..[[, 100%, 50%) !important;font-weight:bold }
                                    .sstroke { stroke:hsl(]]..e..[[, 100%, 50%) }
                                    
                                    .pitch, .alt { stroke:hsl(]]..e..[[, 98.9%, 34.9%) }
                                    .spitch, .epitch, .salt { fill:hsl(]]..e..[[, 98.9%, 34.9%) }
                                    .pitch {opacity:0.4;stroke-width:3}
                                    .spitch {text-anchor:start;font-size:12;font-weight:bold}
                                    .epitch {text-anchor:end;font-size:12;font-weight:bold}
                                    
                                    .alt {opacity:0.4;stroke-width:3}
                                    .salt {text-anchor:start;font-size:12;font-weight:bold}
                                    
                                    .roll {stroke:hsl(]]..e..[[, 98.9%, 34.9%);opacity:0.4;stroke-width:2}
                                    .sroll {fill:hsl(]]..e..[[, 98.9%, 34.9%);text-anchor:middle;font-weight:bold}
                                    
                                    .throttle {fill:hsl(]]..e..[[, 98.9%, 34.9%);opacity:0.7}
                                    .textWeak, .textWeak text {fill-opacity:0.5}
                                    
                                    .atext {fill:hsl(]]..e..[[, 98.9%, 34.9%);font-weight:bold}
                                    .txtPoly, .txtPolyN { opacity:0.5;stroke-width:2;stroke:hsl(]]..e..[[, 98.9%, 34.9%);fill:none;stroke-linejoin:miter }
                                    .txtPolyN { stroke-dasharray:6, 2, 6, 2, 10 }
                                ]]end;register:addAction("staticCssStyle","hudGeneral",renderHudGeneralCss)function staticRender()local i=""if not a[b]then local j=[[
                                    <svg id="hudMain" height="100%" width="100%" viewBox="0 0 1920 1080">
                                        <g class="majorLine">
                                    ]]if showCenterCross then j=j..[[
                                            <line x1="932" y1="540" x2="945" y2="540"/>
                                            <line x1="988" y1="540" x2="975" y2="540"/>
                                            <line x1="960" y1="512" x2="960" y2="525"/>
                                            <line x1="960" y1="568" x2="960" y2="555"/>
                                        ]]end;if not useLightStyle then j=j..[[
                                            <g style="opacity:0.2">
                                                <line x1="823" y1="540" x2="783" y2="540"/>
                                                <line x1="1097" y1="540" x2="1137" y2="540"/>
                                        ]]if b==0 then j=j..[[
                                                <line x1="940" y1="694" x2="980" y2="694"/>
                                            ]]else j=j..[[
                                                <line x1="960" y1="694" x2="960" y2="712"/>
                                            ]]end;j=j..[[
                                            </g>
                                        </g>
                                        <g class="text">
                                            <g font-size=15>
                                        ]]if b==0 then j=j..[[
                                                <text x="960" y="33" text-anchor="middle" id="atmosOrSpace">Surface Mode</text>
                                            ]]else j=j..[[
                                                <text x="960" y="33" text-anchor="middle" id="atmosOrSpace">Space Mode</text>
                                            ]]end;j=j..[[
                                            </g>
                                            <g font-size="10" class="textWeak">
                                        ]]else j=j..[[
                                        </g>
                                        <g class="text">
                                            <g font-size="10" class="textWeak">
                                        ]]end;a[b]=j end;return a[b]end;self.viewTags={"hud"}function self:setScreen(k)local l=core.getAltitude()local m=construct.getVelocity()local n=vec3(m):len()local o=vec3(core.getWorldVertical())local p=vec3(construct.getWorldOrientationForward())local q=vec3(construct.getWorldOrientationRight())local r=0;local s=0;local t="ROLL"local u=utils.round(n*3.6)local v=l;local w="ALT"local x="KM/H"local y=0;local z=0;if n>5 then y=getRelativePitch(m)z=getRelativeYaw(m)end;if unit.getClosestPlanetInfluence()>0 or l>0 and l<100000 then b=0 else b=1 end;if b==1 then s=y;r=z;t="YAW"w="KM/H"v=u;x="BREAK"if c~=nil then u=getDistanceDisplayString(c:getBrakeTime(),2)end else s=180-getRoll(o,q,p)if s>180 then s=-(360-s)end;s=s*-1;r=getRoll(o,p,q)*-1 end;local j=staticRender(b)j=j..[[
                                            <text x="1135" y="395" text-anchor="end">]]..x..[[</text>
                                ]]local A=20;local B,C="",""local D=660;for E,F in pairs({"atmo","space","rocket"})do if self:hasFuel(F)then B=B..[[<text x="785" y="]]..D..[[" text-anchor="start">]]..string.upper(F)..[[</text>]]local G=""local H=self:minFuelState(F)if H<A then G=[[class="warn"]]else G=[[class="textWeak"]]end;C=C..[[<text x="785" y="]]..D+14 ..[[" ]]..G..[[ text-anchor="start">]]..H..[[%</text>]]D=D+25 end end;local I=0;if unit.getThrottle then I=unit.getThrottle()end;j=j..[[
                                    <text x="785" y="520" text-anchor="start">PITCH</text>
                                    <text x="1135" y="520" text-anchor="end">]]..w..[[</text>
                                    <text x="960" y="676" text-anchor="middle">]]..t..[[</text>
                                    <text x="790" y="660" text-anchor="start"></text>
        							<text x="1135" y="660" text-anchor="end">THRL</text>
        							]]..B..[[
                                </g>
                                <g font-size="12">
                                    <text x="785" y="534" text-anchor="start">]]..utils.round(s)..[[</text>
                                    <text x="1135" y="534" text-anchor="end">]]..utils.round(v)..[[</text>
                                    <text x="960" y="690" text-anchor="middle">]]..utils.round(r)..[[</text>
                                    <text x="790" y="674" text-anchor="start">]]..""..[[</text>
        							<text x="1135" y="674" text-anchor="end">]]..utils.round(I)..[[%</text>
        							]]..C..[[
                                ]]j=j..[[
                                            <text x="1135" y="409" text-anchor="end">]]..u..[[</text>
                                ]]j=j..[[
                                            </g>                            
                                        </g>
                                ]]if not useLightStyle then if b==1 then pitchC=utils.round(s)for J=pitchC-25,pitchC+25 do if J%10==0 then num=J;if num<-179 then num=num+360 end;if num>180 then num=num-360 end;j=j..[[<g transform="translate(0 ]]..-J*5+s*5 ..[[)">
                                                    <text x="745" y="540" class="epitch" style="font-size:12">]]..num..[[</text></g>]]end;len=5;if J%10==0 then len=30 elseif J%5==0 then len=15 end;j=j..[[
                                            <g transform="translate(0 ]]..-J*5+s*5 ..[[)">
                                                <line x1="]]..780-len..[[" y1="540" x2="780" y2="540" class="pitch"/></g>]]end end;local K=l;if b==1 then K=n*3.6 end;altOrSpeedMulti=25;if K<100 then altOrSpeedMulti=5 end;if K>4000 then altOrSpeedMulti=100 end;alt=utils.round(K/altOrSpeedMulti)if lastAlt~=alt then lastAlt=alt;lastAltDraw=""for J=alt-25,alt+25 do if J%10==0 then num=J;lastAltDraw=lastAltDraw..[[<g transform="translate(0 ]]..-J*5+alt*5 ..[[)">
                                                    <text x="1175" y="543" class="salt" style="font-size:12">]]..num*altOrSpeedMulti..[[</text></g>]]end;len=5;if J%10==0 then len=30 elseif J%5==0 then len=15 end;lastAltDraw=lastAltDraw..[[
                                            <g transform="translate(0 ]]..-J*5+alt*5 ..[[)">
                                                <line x1="]]..1140+len..[[" y1="540" x2="1140" y2="540" class="alt"/></g>]]end end;j=j..lastAltDraw;if b==1 then rollC=utils.round(z)for J=rollC-35,rollC+35 do if J%10==0 then num=math.abs(J)if num>180 then num=180+180-num end;j=j..[[<g transform="rotate(]]..J-z..[[,960,450)">
                                                <text x="960" y="760" class="sroll" style="font-size:12">]]..num..[[</text></g>]]end;len=5;if J%10==0 then len=15 elseif J%5==0 then len=10 end;if len>5 then j=j..[[<g transform="rotate(]]..J-z..[[,960,450)">
                                                <line x1="960" y1="715" x2="960" y2="]]..715+len..[[" class="roll"/></g>]]end end end end;j=j..[[
                                    </svg>
                                ]]if b==0 then end;if b==0 then j=j..d:setScreen(k)end;if system.getArkTime()-bootTime<2 then j=j..[[<style>body { opacity: ]]..(system.getArkTime()-bootTime)/1.5 ..[[ }</style>]]end;return j end;local L=nil;function self:hasFuel(M)if L==nil then L=getTanks()end;return#L[M]>0 end;function self:minFuelState(M)if L==nil then L=getTanks()end;return minFuelStateByTank(L[M])end;function minFuelStateByTank(L)local N=10000;for O,P in pairs(L)do local Q=CalculateFuelLevel(P)*100;if Q<N then N=Q end end;if N==10000 then return 0 end;return round(N)end;local R={atmofueltank={{w=10000,mv=51200,me=5480},{w=1300,mv=6400,me=988.67},{w=150,mv=1600,me=182.67},{w=0,mv=400,me=35.03}},spacefueltank={{w=10000,mv=76800,me=5480},{w=1300,mv=9600,me=988.67},{w=150,mv=2400,me=182.67},{w=0,mv=2400,me=182.67}},rocketfueltank={{w=65000,mv=50000*0.8,me=25740},{w=1300,mv=6400*0.8,me=4720},{w=150,mv=800*0.8,me=886.72},{w=0,mv=400*0.8,me=173.42}}}function tankStatsDefault(S,T)for E,U in pairs(R[S])do if T>U.w then return U.mv,U.me end end;return 0,0 end;function tankStats(V,W,X,Y)local Z=false;for E,_ in pairs(_ENV[W])do if _.getLocalId()==V then Z=true;X=_.getMaxVolume()*4;Y=_.getSelfMass()break end end;return Z,X,Y end;function CalculateFuelLevel(V)return(core.getElementMassById(V[1])-V["me"])/V["mv"]end;function getTanks()local a0,a1,a2={},{},{}local a3=core.getElementIdList()fuelTankHandlingAtmos=fuelTankHandlingAtmos or 0;fuelTankHandlingSpace=fuelTankHandlingSpace or 0;fuelTankHandlingRocket=fuelTankHandlingRocket or 0;ContainerOptimization=ContainerOptimization or 0;FuelTankOptimization=FuelTankOptimization or 0;local function a4(a5)local a6,a7=0,0;if ContainerOptimization>0 then a6=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then a7=FuelTankOptimization*0.05 end;return a5*(1-(a6+a7))end;local L={atmo={},space={},rocket={}}local a8=getPlugin("slots")for E,V in pairs(a3)do local a9=core.getElementClassById(V)local aa=a8:getClassType(a9)if aa~=nil then if aa=="atmofueltank"or aa=="spacefueltank"or aa=="rocketfueltank"then local T=core.getElementMaxHitPointsById(V)local ab=0;if aa=="atmofueltank"then ab=fuelTankHandlingAtmos elseif aa=="spacefueltank"then ab=fuelTankHandlingSpace elseif aa=="rocketfueltank"then ab=fuelTankHandlingRocket end;local X,Y=tankStatsDefault(aa,T,ab)local Z=false;Z,X,Y=tankStats(V,aa,X,Y)if not Z then X=X+X*ab*0.2;X=a4(X)end;local ac={[1]=V,["mv"]=X,["me"]=Y}if aa=="atmofueltank"then table.insert(L.atmo,ac)elseif aa=="spacefueltank"then table.insert(L.space,ac)elseif aa=="rocketfueltank"then table.insert(L.rocket,ac)end end end end;for E,ad in pairs(L)do table.sort(ad,function(ae,af)return ae[1]<af[1]end)end;return L end;function getDistanceDisplayString(ag,ah)local ai=ag>10000;if ah==nil then ah=1 end;if ai then return round(ag/1000/200,ah).." SU"elseif ag<1000 then return round(ag,ah).." M"else return round(ag/1000,ah).." KM"end end;function self:register(aj)_ENV=aj;c=getPlugin("BaseFlight",true)d=getPlugin("artificialhorizon",true)local ak=getPlugin("screener")ak:registerDefaultScreen("mainScreenThird","Hud")ak:registerDefaultScreen("mainScreenFirst","Hud")ak:addView("Hud",self)end;return self
        
        end
        package.preload[packagePrefix.."screener"] = function()
           local self={}local a=false;self.loadPrio=10;local b=getPlugin("config")local c={menuitmwidth=1/8,menuitmheight=1/16,offsetx=0,offsety=0,width=1*1/3,height=1*1/3,tag="screen",totalWidth=system.getScreenHeight(),totalHeight=system.getScreenWidth(),perspective="third",parent="mainScreenThird"}local d={}function self:hotkeyState(e)if self.pressedRegister[e]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(e)self.pressedRegister[e]=1 end;function self:endHotkeyPressed(e)self.pressedRegister[e]=nil end;function self:addButton(f,g,h,i,j,k,l)end;function self:addScreen(m,n)curr={}for o,p in pairs(c)do if n[o]==nil then curr[o]=p else curr[o]=n[o]end end;curr["name"]=m;d[m]=curr end;function self:getPerspectiveList()return{"first","third"}end;function self:getPerspective()local q=system.getCameraMode()if q==1 then return"first"else return"third"end end;local r={}function self:addView(s,t)assert(type(s)=="string","name isn't a string, type was "..type(s))assert(type(t)=="table",s..": viewObj isn't a table, type was "..type(t))r[s]=t;register:callAction("registerAddView",s)end;function self:removeView(s)if r[s]==nil then return false end;r[s]=nil;register:callAction("registerRemoveView",s)end;function self:getViewList(u)local v={}for w,x in pairs(r)do if x==nil or x.viewTags==nil then system.print("No view tags: '"..w)else for y,z in pairs(x.viewTags)do if u==nil or z==u then table.insert(v,w)end end end end;table.sort(v)return v end;function self:renderView(s,screen,...)if r[s]==nil then system.print("Render of view '"..(s or"???").."' failed, because it there is no such view registered!","")end;local t=r[s]if t.setScreen~=nil then local A,B=pcall(t.setScreen,t,screen,...)if A then return B else system.print(s.." in setScreen:",B)return nil end else system.print(s.." render has no function 'setScreen'")end end;function self:renderViewRequireRerender(s,screen,...)if self.viewRegister[s]==nil then system.print("Rerender request of view '"..(s or"???").."' failed, because it there is no such view registered!","")end;local t=r[s]if t.requireRerender~=nil then local A,B=pcall(t.requireRerender,t,screen,...)if A then return B else system.print(s.." in renderViewRequireRerender:",B)return nil end end;return true end;function self:actionToHtml(C,...)local D,E=register:callAction(C,...),""for y,p in pairs(D)do if p then E=E..p end end;return E end;function screenObj(s)return d[s]end;function drawAllScreensCss()local q=self:getPerspective()if modeColors[q]==nil then modeColors[q]=290 end;local F=math.max(0,math.min(modeColors[q],360))local G=F+270.0;if G>360 then G=G-360 end;local H=F+180.0;if H>360 then H=H-360 end;local I=[[
                                    * { font-family:Montserrat }
                                    body { margin: 0}
                                    svg {display:block; position:absolute; top:auto; left:auto}
                                    svg svg { overflow: visible }
                                    .screenSvg { position: relative; margin: auto 0; }
                                    .screen { margin:0; padding:0; position: absolute; left: 0; top: 0; border: 2px solid transparent }
                                ]]if a then I=I..[[
        							.screen { border: 2px solid hsl(]]..F..[[, 93.6%, 56.9%) }
        							.menu { position: absolute; right: 0; top: 0; width: 100%; height: 3.125%; overflow: hidden; z-index: 1000 }
        							.mItm { z-index:inherit; background-color:hsl(]]..F..[[, 100%, 50%);position: relative; float: right; height: 100%; width: calc(100% / 24); border: 2px solid hsl(]]..F..[[, 93.6%, 56.9%); overflow: hidden; color: white;display: flex;align-items: center;justify-content: center; }
        						]]end;local q=self:getPerspective()for s,y in pairs(d)do screen=screenObj(s)if q==screen.perspective then I=I..[[
        								#]]..s..[[ { width: ]]..screen.width*100 ..[[%; height: ]]..screen.height*100 ..[[%; top: ]]..screen.offsety*100 ..[[%; left: ]]..screen.offsetx*100 ..[[% }
        			]]if a then I=I..[[
        								#]]..s..[[ > .menu { height: ]]..screen.menuitmheight*100 ..[[% }
        								#]]..s..[[ > .menu .mItm { width: ]]..screen.menuitmwidth*100 ..[[% }
        				]]for J,f in pairs(self:getViewList(screen.tag))do local K="scval_"..s.."_"..f;local curr=b:get(K,0)if curr==1 then I=I..[[
        								#]]..s..[[ > .menu .mItm.n]]..J..[[ { background-color:hsl(]]..H..[[, 100%, 50%) }
        						]]end end end end end;return I end;register:addAction("staticCssStyle","drawAllScreensCss",drawAllScreensCss)local L={}function drawAllScreens()local M=0;local N,O,P=self:actionToHtml("staticCssStyle"),"",""local Q,R,S,screens={},{},{},{}local q=self:getPerspective()if a then for J,s in pairs(self:getViewList("screen"))do O=O..'<div class="mItm text n'..J..'">'..s.."</div>"end;O=[[
        			<div class="menu screentag">
        				]]..O..[[
        			</div>
        		]]end;for s,y in pairs(d)do screen=screenObj(s)if q==screen.perspective then if screen.tag=="screen"then if R[screen.parent]==nil then R[screen.parent]=""end;R[screen.parent]=R[screen.parent]..[[
                                           <div id="]]..s..[[" class="screen">
                                            ]]..O..[[
                                            ]]..self:actionToHtml(s.."Html")..[[
                                           </div>]]end end end;if a then O=""for J,s in pairs(self:getViewList("hud"))do O=O..'<div class="mItm text n'..J..'">'..s.."</div>"end;O=[[
        			<div class="menu hudtag">
        				]]..O..[[
        			</div>
        		]]end;for s,y in pairs(d)do screen=screenObj(s)if q==screen.perspective then if screen.tag=="hud"then if S[screen.parent]==nil then S[screen.parent]=""end;if R[s]==nil then R[s]=""end;S[screen.parent]=S[screen.parent]..[[
        									   <div id="]]..s..[[" class="screen">
        										]]..O..[[
        										]]..self:actionToHtml(s.."Html")..[[
        										]]..R[s]..[[
        									   </div>]]end end end;local T=""if a then local U=system.getMousePosX()/c.totalWidth;local V=system.getMousePosY()/c.totalHeight;T=[[
        			<svg style="z-index: 10000;position: absolute;left:]]..U*100 ..[[%;top:]]..V*100 ..[[%" height="20px" width="20px" viewBox="0 0 512 512">
        				<path class="sfill" d="M434.214,344.448L92.881,3.115c-3.051-3.051-7.616-3.947-11.627-2.304c-3.989,1.643-6.592,5.547-6.592,9.856v490.667
        					c0,4.459,2.773,8.448,6.976,10.005c1.195,0.448,2.453,0.661,3.691,0.661c3.051,0,6.037-1.323,8.085-3.733l124.821-145.6h208.427
        					c4.309,0,8.213-2.603,9.856-6.592C438.182,352.085,437.265,347.52,434.214,344.448z"/>
        			</svg>
        			]]end;for s,E in pairs(S)do T=T..E end;local W=[[
                                    <head>
                                        <style>
                                            ]]..N..[[
                                        </style>
                                    </head>
                                    <body>
                                        ]]..T..[[
                                    </body>
                                ]]if debugscreen~=nil then debugscreen.setHTML(W)end;if#screens>0 then for X,Y in pairs(screens)do local s,Z="screen"..X,nil;local screen=screenObj(s)for y,f in pairs(self:getViewList(screen.tag))do local _=s.."_"..f;local K="scval_".._;local curr=b:get(K,0)if curr==1 then if self:renderViewRequireRerender(f,Y.getMouseX(),Y.getMouseY(),Y.getMouseState()==1,"real".._)then if Z==nil then Z=""end;Z=Z..self:renderView(f,Y.getMouseX(),Y.getMouseY(),Y.getMouseState()==1,"real".._)end end end;if Z~=nil then Y.setHTML(Z)end end end;system.setScreen(W)end;function self:triggerViewMouseEvent(a0,s,h,i,a1,...)if r[s]==nil then system.print("Render of view '"..(s or"???").."' failed, because it there is no such view registered!","")end;local t=r[s]local a2=t.onMouseUp;if a0==false then a2=t.onMouseDown end;if a2 then local A,B=pcall(a2,t,h,i,a1,...)if A then return B else system.print(s..": error in triggerViewMouseEvent:",a0,B)return nil end else end end;function self:registerDefaultScreen(m,f)local K="scval_"..m.."_"..f;if devMode then print("registering default view "..K)end;b:set(K,1,0)end;function self:register(a3)_ENV=a3;c.totalWidth=system.getScreenWidth()c.totalHeight=system.getScreenHeight()function setActionHtml(m,f)local screen=screenObj(m)local _=m.."_"..f;local K="scval_".._;local curr=b:get(K,0)if curr==1 then if devMode then print("register setActionHtml for "..K)end;register:addAction(m.."Html",_.."Html",function()local U=(system.getMousePosX()/c.totalWidth-screen.offsetx)/screen.width;local V=(system.getMousePosY()/c.totalHeight-screen.offsety)/screen.height;if a==false then U,V=-1,-1 end;return self:renderView(f,U,V,false,_)end)else register:removeAction(m.."Html",_.."Html")end end;function realMouseEvent(a0,screen,a4,h,i)local m=screen.name;for y,Y in pairs(screens)do if Y.getId()==a4.getId()then for y,f in pairs(register:getViewList(screen.tag))do local _=m.."_"..f;local K="scval_".._;local curr=b:get(K,0)if curr==1 then self:triggerViewMouseEvent(a0,f,h,i,"real".._)end end;return true end end;return false end;function virtualMouseEvent(a0,screen,a5,a6,a7)local q,m=self:getPerspective(),screen.name;local a8,a9=screen.width,screen.height;local aa=screen.menuitmwidth*screen.width;local ab=screen.menuitmheight*screen.height;local ac=a5-screen.offsetx;local ad=a6-screen.offsety;if ac>=0 and ac<a8 then if ad>=0 and ad<a9 then if ad<ab then if a0 then for ae,f in pairs(self:getViewList(screen.tag))do local af,ag=ae*aa,(ae-1)*aa;if ac>a8-af and ac<=a8-ag then local _=m.."_"..f;local K="scval_".._;local curr=b:get(K,0)if curr==1 then b:set(K,0,0)else b:set(K,1,0)end;setActionHtml(m,f)end end end else for y,f in pairs(self:getViewList(screen.tag))do local _=m.."_"..f;local K="scval_".._;local curr=b:get(K,0)if curr==1 then self:triggerViewMouseEvent(a0,f,ac/a8,ad/a9,_)end end end;if devMode then local a2="DOWN"if a0 then a2="UP"end;print("Event "..a2 .."Screen "..m.." Type "..a7 .." Relative x "..ac.." Relative y "..ad)end;return true end end;return false end;function tableLength(ah)assert(type(ah)=='table','bad parameter #1: must be table')local ai=0;for y in pairs(ah)do ai=ai+1 end;return ai end;function initAllScreens()screenObjCache={}if devMode then print("reinitialize all "..tableLength(d).." screens")end;for s,y in pairs(d)do local screen=screenObj(s)for y,f in pairs(self:getViewList(screen.tag))do setActionHtml(s,f)end;register:addAction("screenMouseUp","realScreenMouseUp"..s,function(a4,h,i)realMouseEvent(true,screen,a4,h,i)end)register:addAction("screenMouseDown","realScreenMouseUp"..s,function(a4,h,i)realMouseEvent(false,screen,a4,h,i)end)register:addAction("mouseUp","screenMouseUp"..s,function(a5,a6,a7)if self:getPerspective()==screen.perspective then virtualMouseEvent(true,screen,a5,a6,a7)end end)register:addAction("mouseDown","screenMouseDown"..s,function(a5,a6,a7)if self:getPerspective()==screen.perspective then virtualMouseEvent(false,screen,a5,a6,a7)end end)end end;self:addScreen("mainScreenFirst",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud",perspective="first"})self:addScreen("mainScreenThird",{menuitmwidth=1/24,menuitmheight=1/32,width=1,height=1,tag="hud"})self:addScreen("screen1first",{offsetx=0,perspective="first",parent="mainScreenFirst"})self:addScreen("screen1third",{offsetx=0})self:addScreen("screen2first",{offsetx=0,offsety=1*1/3,perspective="first",parent="mainScreenFirst"})self:addScreen("screen2third",{offsetx=0,offsety=1*1/3})self:addScreen("screen3first",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23,perspective="first",parent="mainScreenFirst"})self:addScreen("screen3third",{offsetx=1*0.63,offsety=1*0.25,width=1*0.23,height=1*0.23})self:addScreen("screen4first",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25,perspective="first",parent="mainScreenFirst"})self:addScreen("screen4third",{offsetx=1*0.56,offsety=0,width=1*0.20,height=1*0.25})register:addAction("registerAddView","viewRegisterWatcher",initAllScreens)initAllScreens()register:addAction("unitOnStart","Screener",function()register:addAction("systemOnUpdate","drawAllScreens",function()if databaseHasChild~=true and screenToggle and(executeTotal==1 or executeTotal%renderEveryXFrames==0)then drawAllScreens()end end)register:addAction("leftmouseStart","mouseStartTracker",function()if a then local U=system.getMousePosX()/c.totalWidth;local V=system.getMousePosY()/c.totalHeight;register:callAction("mouseDown",U,V,"hud")return true else return false end end)register:addAction("leftmouseStop","mouseStopTracker",function()if a then local U=system.getMousePosX()/c.totalWidth;local V=system.getMousePosY()/c.totalHeight;register:callAction("mouseUp",U,V,"hud")return true else return false end end)end)local aj=getPlugin("CommandHandler")aj:AddCommand("setup",function(ak)a=not a;if a then system.lockView(true)print("setupMode on")else system.lockView(false)print("setupMode off")end end,"Activate/Deactivate screener setup mode")end;return self
        
        end
        package.preload[packagePrefix.."BaseFlight"] = function()
           local self={}function self:valid(a)return unitType=="remote"or unitType=="command"end;self.version=0.9;self.loadPrio=1000;local b=unit;local c=system;local d={}local e=""function self:register(f)_ENV=f;if not self:valid()then return end;if Nav==nil then Nav=Navigator.new(system,core,unit)end;if Nav.control.isRemoteControlled()==1 then player.freeze(1)end;local g=0;local h=0;local i=0;local j=0;local k=unit.isAnyLandingGearDeployed()local l=Nav.axisCommandManager;l:setTargetGroundAltitude(30)register:addAction("systemOnUpdate","NavUpdate",function()Nav:update()end)register:addAction("forwardStart","forwardStartFlight",function()g=-1 end)register:addAction("backwardStart","backwardStartFlight",function()g=1 end)register:addAction("yawleftStart","yawleftStartFlight",function()i=1 end)register:addAction("yawrightStart","yawrightStartFlight",function()i=-1 end)register:addAction("strafeleftStart","strafeleftStartFlight",function()l:updateCommandFromActionStart(axisCommandId.lateral,-1.0)end)register:addAction("straferightStart","straferightStartFlight",function()l:updateCommandFromActionStart(axisCommandId.lateral,1.0)end)register:addAction("leftStart","leftStartFlight",function()h=-1 end)register:addAction("rightStart","rightStartFlight",function()h=1 end)register:addAction("upStart","upStartFlight",function()l:updateCommandFromActionStart(axisCommandId.vertical,1.0)end)register:addAction("downStart","downStartFlight",function()l:updateCommandFromActionStart(axisCommandId.vertical,-1.0)end)register:addAction("groundaltitudedownLoop","groundaltitudedownLoopFlight",function()l:updateTargetGroundAltitudeFromActionLoop(-1.0)end)register:addAction("groundaltitudedownStart","groundaltitudedownStartFlight",function()l:updateTargetGroundAltitudeFromActionStart(-1.0)end)register:addAction("groundaltitudeupLoop","groundaltitudeupLoopFlight",function()l:updateTargetGroundAltitudeFromActionLoop(1.0)end)register:addAction("groundaltitudeupStart","groundaltitudeupStartFlight",function()l:updateTargetGroundAltitudeFromActionStart(1.0)end)register:addAction("gearStart","gearStartFlight",function()k=not k;if k then unit.deployLandingGears()else unit.retractLandingGears()end end)register:addAction("lightStart","lightStartFlight",function()if unit.isAnyHeadlightSwitchedOn()==1 then unit.switchOffHeadlights()else unit.switchOnHeadlights()end end)register:addAction("antigravityStart","antigravityStartFlight",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("brakeStart","brakeStartFlight",function()j=1 end)register:addAction("stopenginesStart","stopenginesStartFlight",function()l:resetCommand(axisCommandId.longitudinal)end)register:addAction("speedupStart","speedupStartFlight",function()l:updateCommandFromActionStart(axisCommandId.longitudinal,5.0)end)register:addAction("speeddownStart","speeddownStartFlight",function()l:updateCommandFromActionStart(axisCommandId.longitudinal,-5.0)end)register:addAction("speedupLoop","speedupLoopFlight",function()l:updateCommandFromActionLoop(axisCommandId.longitudinal,1.0)end)register:addAction("speeddownLoop","speeddownLoopFlight",function()l:updateCommandFromActionLoop(axisCommandId.longitudinal,-1.0)end)register:addAction("forwardStop","forwardStopFlight",function()g=0 end)register:addAction("backwardStop","backwardStopFlight",function()g=0 end)register:addAction("yawleftStop","yawleftStopFlight",function()i=0 end)register:addAction("yawrightStop","yawrightStopFlight",function()i=0 end)register:addAction("strafeleftStop","strafeleftStopFlight",function()l:updateCommandFromActionStop(axisCommandId.lateral,1.0)end)register:addAction("straferightStop","straferightStopFlight",function()l:updateCommandFromActionStop(axisCommandId.lateral,-1.0)end)register:addAction("leftStop","leftStopFlight",function()h=0 end)register:addAction("rightStop","rightStopFlight",function()h=0 end)register:addAction("upStop","upStopFlight",function()l:updateCommandFromActionStop(axisCommandId.vertical,-1.0)end)register:addAction("downStop","downStopFlight",function()l:updateCommandFromActionStop(axisCommandId.vertical,1.0)end)register:addAction("brakeStop","brakeStopFlight",function()j=0 end)local function m()local c=system;local n=construct;local o=1.6;local p=2;local q=3;local r=30;local s=5;local t=3;self.brake=j;local u=g+c.getControlDeviceForwardInput()local v=h+c.getControlDeviceYawInput()local w=i-c.getControlDeviceLeftRightInput()local x=j;local y=vec3(core.getWorldVertical())local z=vec3(n.getWorldOrientationUp())local A=vec3(n.getWorldOrientationForward())local B=vec3(n.getWorldOrientationRight())local C=vec3(n.getWorldVelocity())local D=vec3(n.getWorldVelocity()):normalize()local E=getRoll(y,A,B)local F=math.abs(E)local G=utils.sign(E)local H=vec3(n.getWorldAngularVelocity())local I=u*o*B+v*q*A+w*p*z;local J=1;local K=0;local L=1;local M=t*(I-H)local N=vec3(n.getWorldAirFrictionAngularAcceleration())M=M-N;Nav:setEngineTorqueCommand('torque',M,J,'airfoil','','',L)local O=-x*(r*C+s*D)Nav:setEngineForceCommand('brake',O)local P=''local Q=vec3()local R=false;local S='thrust analog longitudinal'local T=l:getAxisCommandType(axisCommandId.longitudinal)if T==axisCommandType.byThrottle then local U=l:composeAxisAccelerationFromThrottle(S,axisCommandId.longitudinal)Nav:setEngineForceCommand(S,U,J)elseif T==axisCommandType.byTargetSpeed then local U=l:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)P=P..' , '..S;Q=Q+U;if l:getTargetSpeed(axisCommandId.longitudinal)==0 or l:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-l:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then R=true end end;local V='thrust analog lateral'local W=l:getAxisCommandType(axisCommandId.lateral)if W==axisCommandType.byThrottle then local X=l:composeAxisAccelerationFromThrottle(V,axisCommandId.lateral)Nav:setEngineForceCommand(V,X,J)elseif W==axisCommandType.byTargetSpeed then local Y=l:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)P=P..' , '..V;Q=Q+Y end;local Z='thrust analog vertical'local _=l:getAxisCommandType(axisCommandId.vertical)if _==axisCommandType.byThrottle then local a0=l:composeAxisAccelerationFromThrottle(Z,axisCommandId.vertical)Nav:setEngineForceCommand(Z,a0,J,'airfoil','ground','',L)elseif _==axisCommandType.byTargetSpeed then local a1=l:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)P=P..' , '..Z;Q=Q+a1 end;if Q:len()>constants.epsilon then if j~=0 or R or math.abs(D:dot(A))<0.95 then P=P..', brake'end;Nav:setEngineForceCommand(P,Q,K,'','','',L)end end;self:addFlightMode("Base",m)self:setFlightMode("Base")register:addAction("systemOnFlush","FlightScript",function()local a2=self:getCurrentFlightMode()a2()end)end;function self:getMass()local a3=construct;local a4=a3.getMass()for a5,a6 in pairs(a3.getDockedConstructs())do a4=a4+a3.getDockedConstructMass(a4)end;for a5,a6 in pairs(a3.getPlayersOnBoard())do a4=a4+a3.getBoardedPlayerMass(a4)end;return a4 end;function self:getBrakeTime()local a3=75000/3.6;local n=construct;local a7=n.getMaxBrake()if a7==nil then return 0,0 end;local a8=vec3(n.getWorldVelocity()):len()if a8<1 then return 0,0 end;local a6=math.min(a8,n.getMaxSpeed())local a4=self:getMass()local a9=a4*a3/a7*math.asin(a6/a3)local aa=a4*a3^2/a7*(1-math.sqrt(1-a6^2/a3^2))return aa,a9 end;function self:addFlightMode(ab,ac)d[ab]=ac end;function self:setFlightMode(ab)e=ab end;function self:getFlightMode(ab)return d[ab]end;function self:getCurrentFlightMode()return self:getFlightMode(e)end;return self
        
        end
        package.preload[packagePrefix.."CommandHandler"] = function()
           local self={}function self:register(a)_ENV=a;register:addAction("systemOnInputText","CommandHandler",CommandHandler)end;self.version=0.9;self.loadPrio=5;function CommandHandler(b)b=string.lower(b)local c=string.sub(b,1,1)if c~=self.prefix then return end;local d=mysplit(string.sub(b,2,#b))local e,f=pcall(CommandList[1][c][1][d[1]],d)if not e then print(f)end end;if unitType=="gunner"then self.prefix="/"elseif unitType=="remote"then self.prefix="!"else self.prefix="/"end;CommandList={{[self.prefix]={{["help"]=function(g)local h=g[2]if h==nil then for i,j in pairs(CommandList[1][self.prefix][2])do print(i..":  "..j)end end end},{["help"]="use this to list all commands"}}},{[self.prefix]="basic commands from the"..unitType or""}}function self:AddCommand(k,l,m)CommandList[1][self.prefix][1][k]=l;CommandList[1][self.prefix][2][k]=m or""end;return self
        
        end
        package.preload[packagePrefix.."Settings"] = function()
           self={}local a=getPlugin("config")self.version=0.9;self.loadPrio=5;self.Default={}self.Range={}self.Description={}function self:add(b,c,d,e,f)if b==nil or c==nil then return"missing Infos"end;e=e or""f=f or"Standard"if d==nil or type(d)~="table"then local g=type(c)if g=="boolean"then d={"boolean"}elseif g=="number"then d={"number",1,10,1}else return"missing Range Infos"end end;if self.Default[f]==nil then self.Default[f]={}self.Range[f]={}self.Description[f]={}end;self.Default[f][b]=c;self.Range[f][b]=d;self.Description[f][b]=e end;function self:rem(b,f)f=f or"Standard"self.Default[f][b]=nil;self.Range[f][b]=nil;self.Description[f][b]=nil end;function self:set(b,h,f)f=f or"Standard"local i=self.Range[f][b]local g=type(h)if i[1]~=g then return end;if g=="number"then h=utils.clamp(h,i[2],i[3])h=(h-i[2])/i[4]h=round(h)h=h*i[4]+i[2]elseif g=="string"then if not inTable(i[2],h)then return end end;a:set(f..b,h,self.Default[f][b])end;function self:get(b,f)f=f or"Standard"return a:get(f..b,self.Default[f][b])end;function self:register(j)_ENV=j end;return self
        
        end
        package.preload[packagePrefix.."config"] = function()
           local self={}local a=nil;local b={}function self:get(c,d)if a==nil then self:load()end;b[c]=true;if a[c]==nil then return d end;if d~=nil and a[c]==d then a[c]=nil;return d end;return a[c]end;function self:set(c,e,d)if a==nil then self:load()end;b[c]=true;if a[c]~=e then if e==d then a[c]=nil else a[c]=e end;self:save()end end;function self:load()if a==nil then if database~=nil and database.hasKey~=nil and database.hasKey("config")==1 then local f=database.getStringValue("config")a=json.decode(f)end;if a==nil then a={}end end end;function self:save()if a~=nil then if database~=nil and database.hasKey~=nil then database.setStringValue("config",json.encode(a))end end end;function self:cleanup()if a==nil then return end;local g=false;for h,i in pairs(a)do if b[h]==nil then g=true;a[h]=nil end end;if g then self:save()end end;function self:register(j)_ENV=j;register:addAction("systemStop","configCleanup",function()self:cleanup()end)end;return self
        
        end
        package.preload[packagePrefix.."slots"] = function()
           local self={}self.slots=nil;local a={control=true,library=true,system=true,unit=true,player=true,construct=true}function self:calcSlots()self.slots={}local b=unit or{}for c,d in pairs(b)do if a[c]==nil then if type(c)=="string"and type(d)=="table"and type(d.export)=="table"then self.slots[c]=d end end end;return self.slots end;function self:getSlots()if self.slots==nil then self:calcSlots()end;return self.slots end;self.elementsIdList=nil;function self:calcElementList()if core==nil then return end;self.elementsIdList=core.getElementIdList()end;function self:getElementList()if self.elementsIdList==nil then self:calcElementList()end;return self.elementsIdList end;local e={RemoteControlUnit="remote",CockpitHovercraftUnit="command",PVPSeatUnit="gunner",CockpitCommandmentUnit="command",CockpitFighterUnit="command"}local f={Weapo="weapon",Shiel="shield",Radar="radar",CoreU="core"}local g={AntiGravityGeneratorUnit="antigrav",WarpDriveUnit="warpdrive",DataBankUnit="databases",ReceiverUnit="receiver",EmitterUnit="emitter",ScreenUnit="screens",CombatDefense="transponder",AtmoFuelContainer="atmofueltank",SpaceFuelContainer="spacefueltank",RocketFuelContainer="rocketfueltank",CounterUnit="counter",laserDetector="laser",SpaceEngine="engine"}local h={weapon=true,databases=true,screens=true,atmofueltank=true,spacefueltank=true,rocketfueltank=true,radar=true,engine=true}local i={core={"onStressChanged(stress)"},container={"onContentUpdate()"},industry={"onStarted(id,quantity)","onCompleted(id,quantity)","onStatusChanged(status)","onBankUpdate()"},radar={"onEnter(id)","onLeave(id)","onIdentified(id)"},screens={"mouseDown(x,y)","mouseUp(x,y)","onOutputChanged(output)"},laser={"onHit()","onLoss()"},receiver={"onReceived(channel,message)"},shield={"onToggled(active)","onAbsorbed(hitpoints,rawHitpoints)","onVentin(active,restoredHitpoints)","onDown()","onRestored()"},weapon={"onReload(ammoId)","onReloaded(ammoId)","onMissed(targetId)","onDestroyed(targetId)","onElementDestroyed(targetId,itemId)","onHit(targetId,damage)"}}local function j(k)for l,m in ipairs(k)do local n,o=m:match("^([^(]+)%((.*)%)")local p={}for q in o:gmatch("[^%s,]+")do table.insert(p,q)end;for r,s in ipairs(p)do print(string.format("* Slot name %q has options %q.",n,s))end;local t=map(p,function()return"*"end)for r,s in ipairs(t)do print(string.format("* Slot name %q has options %q.",n,s))end end end;function self:getClassType(u)local type;if g[u]~=nil then type=g[u]else local v=string.sub(u,0,5)if f[v]~=nil then type=f[v]end end;return type end;function self:register(w)_ENV=w;for type,r in pairs(h)do _ENV[type]={}end;for r,x in pairs(self:getSlots())do local u=x.getClass()local type=self:getClassType(u)if type==nil then system.print("Unrecognized Type: "..u)else if h[type]==nil then _ENV[type]=x else table.insert(_ENV[type],x)end end end;function compare(y,z)if y~=nil and y.getId and z~=nil and z.getId then return y.getId()<z.getId()end;return nil end;for type,r in pairs(h)do if#_ENV[type]>1 then table.sort(_ENV[type],compare)end end;if#_ENV["databases"]>0 then local A=getPlugin("bankraid",true)if A~=nil then _ENV["database"]=A:new(_ENV["databases"])else _ENV["database"]=_ENV["databases"][1]end end;if _ENV["unitType"]==nil or _ENV["unitType"]==""then if e[unit.getClass()]~=nil then _ENV["unitType"]=e[unit.getClass()]else system.print("Unrecognized unitTypeClass: "..unit.getClass())end end;register:addAction("antigravityStart","antigravityStart",function()if antigrav~=nil then antigrav.toggle()end end)register:addAction("systemOnUpdate","frameCounter",function()if executeTotal==nil then executeTotal=0 end;if executeSet==nil then executeSet=0 end;executeTotal=executeTotal+1;executeSet=executeSet+1;local B=system.getArkTime()if B-executeTime>1 then executeLastFrames=executeSet;executeSet=1;executeTime=B;local C=false;if C then system.print("Frames: "..executeLastFrames)end end end)register:addAction("systemOnActionStart","systemActionStartAlias",function(D,system)register:callAction(D.."Start",system)register:startHotkeyPressed(D)end)register:addAction("systemOnActionStop","systemActionStopAlias",function(D,system)register:callAction(D.."Stop",system)register:endHotkeyPressed(D)end)register:addAction("systemOnActionLoop","systemActionLoopAlias",function(D,system)register:callAction(D.."Loop",system)end)end;return self
        
        end
        package.preload[packagePrefix.."register"] = function()
           local self={}self.functionRegister={}self.overwriteRegister={}self.overwriteOrder={}self.viewRegister={}self.pressedRegister={}function self:hotkeyState(a)if self.pressedRegister[a]==1 then return 1 end;return 0 end;function self:startHotkeyPressed(a)self.pressedRegister[a]=1 end;function self:endHotkeyPressed(a)self.pressedRegister[a]=nil end;self.switches={}function self:addSwitch(b,c)assert(type(b)=="string","name isn't a string, type was "..type(b))assert(type(c)=="table",b..": entity isn't a table, type was "..type(c))self.switches[b]=c;self:callAction("registerAddSwitch",b)end;function self:getSwitch(b)assert(type(b)=="string","name isn't a string, type was "..type(b))return self.switches[b]end;function self:getSwitches()return self.switches end;self.taskRegister={}self.taskOrder={}local function d(e,f)if e~=nil and f~=nil then return self.taskRegister[e].order<self.taskRegister[f].order end;return nil end;local g=2500;function self:addTask(b,h,i,j)assert(type(b)=="string","addTask: name isn't a string, type was "..type(b))assert(type(h)=="function",b..": func isn't a function, type was "..type(h))if i==nil then i=10 else assert(type(i)=="number",b..": priority has to be number, type was "..type(i))end;if j==nil then j=g else assert(type(j)=="number",b..": rating has to be number, type was "..type(j))assert(j<=g,b..": rating has to be smaller then the allowed max rating of "..g)end;if not self:hasAction("systemUpdate","registerTasker")then self:addAction("systemUpdate","registerTasker",function()self:runTasks()end)end;if self.taskRegister[b]~=nil then self:removeTask(b)end;table.insert(self.taskOrder,b)self.taskRegister[b]={order=i,task=coroutine.create(h),rating=j}if#self.taskOrder>1 then table.sort(self.taskOrder,d)end end;function self:hasTask(b)return self.taskRegister[b]~=nil end;function self:removeTask(b)assert(type(b)=="string","removeTask: Name isn't a string, type was "..type(b))self.taskRegister[b]=nil;for k,l in pairs(self.taskOrder)do if l==b then table.remove(self.taskOrder,k)return end end end;function self:runTasks()local m=0;for n,b in ipairs(self.taskOrder)do local o=self.taskRegister[b]if m+o.rating<=g then if o.task==nil or coroutine.status(o.task)=="dead"then self:removeTask(b)else m=m+o.rating;local p,q=coroutine.resume(o.task)if not p then system.print(b.." in runTasks:",q)self:removeTask(b)end end end end end;function self:hasAction(r,b)return self.functionRegister[r]~=nil and self.functionRegister[r][b]~=nil end;function self:addAction(r,b,h)assert(type(r)=="string","action isn't a string, type was "..type(r))assert(type(b)=="string",r..": name isn't a string, type was "..type(b))assert(type(h)=="function",r..":"..b..": func isn't a function, type was "..type(h))if self.functionRegister[r]==nil then self.functionRegister[r]={}end;self.functionRegister[r][b]=h end;function self:removeAction(r,b)if self.functionRegister[r]==nil or self.functionRegister[r][b]==nil then return false end;self.functionRegister[r][b]=nil;return true end;function self:callAction(r,...)local s={}if self.functionRegister[r]~=nil then for b,h in pairs(self.functionRegister[r])do if h~=nil then local t,u=pcall(h,...)if t then s[b]=u else system.print(b.." in callAction:",u)end end end end;return s end;function self:callActionSpecific(r,b,...)assert(self.functionRegister[r]=="table",r..":".." not registered")assert(self.functionRegister[r][b]=="function",r..":"..b..": called specified function isn't a function, type was "..type(self.functionRegister[r][b]))local t,u=pcall(self.functionRegister[r][b],...)if t then return u else system.print(b.." in callActionSpecific:",u)end end;return self
        
        end
        system.rawPrint=system.print;function system.print(a,b)if b then b=tostring(b):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;")else b="???"end;system.rawPrint(a.." "..b)end;function print(c)system.rawPrint(tostring(c))end;print("AresOS public - startup")function inTable(d,e)if type(d)~="table"then return false end;for f,g in pairs(d)do if g==e then return true,f end end;return false end;if not inTable(player.getOrgIds(),2041)then system.print("Corp signatur required")error("Corp signatur required")unit.exit()end;unit.hideWidget()system.showScreen(1)system.setScreen([[<svg xmlns="http://www.w3.org/2000/svg" width="40%" style="left:30%;top:10%;display:block; position:absolute;" viewBox="0 0 973.35 837.57">
            <defs>
            <style>
            .cls-1 { fill: #798a99; }
            .cls-2 { fill: #bd1730; }
            </style>
            </defs>
            <path class="cls-1" d="M583,93.5H437.52C353.65,361.21,211.41,603.08,25.7,804.26L98.3,930a1892.42,1892.42,0,0,1,828.89-.22l70.63-122.29C810.63,605.68,667.33,362.63,583,93.5ZM508.29,740.05A945,945,0,0,0,206.5,789.18C357.22,655.35,464.94,474.16,506.32,269c41.16,204.15,148,384.54,297.51,518.13A945.66,945.66,0,0,0,508.29,740.05Z" transform="translate(-25.08 -93)"/>
            <circle class="cls-2" cx="481.42" cy="523.5" r="118"/>
            </svg>
            <svg height="100%" width="100%" viewBox="0 0 1920 1080" style="left:0;top:0;display:block; position:absolute;">
            <text x="40%" y="88%" style="fill:#FFFFFF;font-size:50px">Hyperion Scripting</text>
            </svg>]])local h=require;require=function(i)return print("require '"..i.."': deprecated, use getPlugin()")end;local j={}local k={}function j:fixName(i)if string.find(i,packagePrefix)then i=string.gsub(i,packagePrefix,"")end;return i end;function j:unloadPlugin(i,l)assert(type(i)=="string","getPlugin: parameter name has to be string, was "..type(i))i=j:fixName(i,l)if package.loaded~=nil and package.loaded[packagePrefix..i]~=nil then package.loaded[packagePrefix..i]=nil end;if k[i]~=nil then if type(k[i])=="table"and type(k[i].unregister)=="function"then k[i].unregister()end;k[i]=nil end end;function j:getPlugin(i,m,n,l)assert(type(i)=="string","getPlugin: parameter name has to be string, was "..type(i))if m==nil then m=false end;i=j:fixName(i,l)if not j:hasPlugin(i,m,l)then return nil end;if type(k[i])=="table"and k[i].valid~=nil then if k[i]:valid(n)~=true then print("getPlugin '"..i.."':".." Not valid or compatible")return nil end end;return k[i]end;function j:hasPlugin(i,m,l)assert(type(i)=="string","hasPlugin: parameter name has to be string, was "..type(i))if m==nil then m=false end;i=j:fixName(i,l)if k[i]==nil then k[i]=false;if player.hasDRMAutorization()~=1 and package.preload[packagePrefix..i]==nil then print("hasPlugin '"..i.."': DRM auth required to load external files")else local o,p=pcall(h,packagePrefix..i)if not o then if m==nil or not m then system.print("hasPlugin '"..i.."': require failed",p)end else k[i]=p end end;if type(k[i])=="table"then if k[i].register~=nil then if _ENV["debugscreen"]==nil then _ENV["debugscreen"]=debugscreen end;if _ENV["register"]==nil then _ENV["register"]=register end;if _ENV["system"]==nil then _ENV["system"]=system end;if _ENV["unit"]==nil then _ENV["unit"]=unit end;if _ENV["player"]==nil then _ENV["player"]=player end;if _ENV["construct"]==nil then _ENV["construct"]=construct end;if _ENV["library"]==nil then _ENV["library"]=library end;local q,r=pcall(k[i].register,k[i],_ENV)if not q and not m then system.print("hasPlugin '"..i.."': register failed",r)end end else if k[i]~=nil and k[i]~=false then if type(k[i])=="string"then print("hasPlugin '"..i.."':"..k[i])else print("hasPlugin '"..i.."': not table value")end end end end;return type(k[i])=="table"end;function unloadPlugin(i,l)return j:unloadPlugin(i,l)end;function hasPlugin(i,m,l)return j:hasPlugin(i,m,l)end;function getPlugin(i,m,n,l)return j:getPlugin(i,m,n,l)end;local s={}unitType=""renderEveryXFrames=1;executeTotal=0;executeSet=0;executeTime=0;executeLastFrames=0;screenToggle=true;mode=-1;forceMode=-1;bootTime=system.getArkTime()useLightStyle=false;local t=120;local u=184;modeColors={}modeColors[0]=t;modeColors[1]=u;fuelTankHandlingSpace=3;fuelTankHandlingRocket=0;fuelTankHandlingAtmos=0;ContainerOptimization=4;FuelTankOptimization=4;function collect_keys(v,w)local x={}for f in pairs(v)do x[#x+1]=f end;table.sort(x,w)return x end;function sortedPairs(v,w)local y=collect_keys(v,w)local z=0;return function()z=z+1;if y[z]then return y[z],v[y[z]]end end end;function tableLength(A)local B=0;for C in pairs(A)do B=B+1 end;return B end;function timeit(D,E)collectgarbage()local F=system.getTime()local G=E()local H=system.getTime()print(D..": "..H-F)return G end;function getRelativePitch(I)return math.deg(math.atan(I[2],I[3]))-90 end;function getRelativeYaw(I)return math.deg(math.atan(I[2],I[1]))-90 end;function mysplit(J,K)if K==nil then K="%s"end;local v={}for c in string.gmatch(J,"([^"..K.."]+)")do table.insert(v,c)end;return v end;function round(L,M)local N=10^(M or 0)if M~=nil then return math.floor(L*N+0.5)/N else return math.floor((L*N+0.5)/N)end end;register=getPlugin("register")slots=getPlugin("slots")register:callAction("systemStart")local O={}function addTimer(P,Q,R)unit.setTimer(P,Q)O[P]=R end;function onTimer(S)if O[S]~=nil then local T,U=pcall(O[S])if not T then print("Timer:"..U.."  "..S)end end end;function stopTimer()for f,C in pairs(O)do unit.setTimer(f,0)end end;local V=0;function delay(W,Q)local P="DelayCounter"..V;addTimer(P,Q,function()pcall(W)unit.stopTimer(P)end)V=V+1 end;register:addAction("unitOnTimer","Timer",onTimer)if devMode==true then getPlugin("dev",true)getPlugin("devTools",true)end;getPlugin("optionals",true)for i,C in sortedPairs(package.preload)do getPlugin(i,true)end;delay(function()register:callAction("unitOnStart")end,0.5)
        
    onStop:
      lua: if register ~= nil then register:callAction("unitOnStop",unit) end
    onTimer(tag):
      lua: if register ~= nil then register:callAction("unitOnTimer",tag,unit) end
  system:
    onActionStart(action):
      lua: if register ~= nil then register:callAction("systemOnActionStart",action,system) end
    onActionStop(action):
      lua: if register ~= nil then register:callAction("systemOnActionStop",action,system) end
    onActionLoop(action):
      lua: if register ~= nil then register:callAction("systemOnActionLoop",action,system) end
    onUpdate:
      lua: if register ~= nil then register:callAction("systemOnUpdate",system) end
    onFlush:
      lua: if register ~= nil then register:callAction("systemOnFlush",system) end
    onInputText(text):
      lua: if register ~= nil then register:callAction("systemOnInputText",text,system) end
  core:
    onStressChanged(stress):
      lua: if register ~= nil then register:callAction("coreOnStressChanged",stress,core) end
